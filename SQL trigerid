create database trigerLOGIT;
use trigerLOGIT;

create table toode(
toodeID int primary key identity(1,1),
toodeNimetus varchar(25),
toodeHind decimal(5,2));

--taabel logi, mis t채idab triger
create table logi(
id int primary key identity(1,1),
tegevus varchar(25),
kuupaev datetime, 
andmed TEXT);

--insert triger, mis j채gib andmete lisamine toode-tabelisse 
create trigger toodeLisamine
on toode 
for insert
as 
insert into logi(tegevus, kuupaev, andmed) 
select 'toode on lisatud', 
getdate(),
inserted.toodeNimetus
from inserted;

drop trigger toodeLisamine;

--kontroll 
insert into toode(toodeNimetus, toodeHind)
values ('kommid', 2.20);

select * from toode;
select * from logi;


--delete triger, mis j채lgib toode kustutamine tabelis
create trigger toodeKustutamine
on toode 
for delete
as 
insert into logi(tegevus, kuupaev, andmed) 
select 'toode on kustutatud', 
getdate(),
concat (deleted.toodeNimetus, '| tegi kasutaja ', SYSTEM_USER)
from deleted;

--kontroll 
delete from toode 
where toodeID=2;

select * from toode;
select * from logi;

--UPDATE triger, mis j채lgib toode uuendamine tabelis
create trigger toodeUuendamine 
on toode 
for update
as 
insert into logi(tegevus, kuupaev, andmed) 
select 'toode on uuendatud', 
getdate(),
concat ('Vanad andmed - ', deleted.toodeNimetus,', ',deleted.toodeHind,
 '\nUued andmed - ', inserted.toodeNimetus,', ',inserted.toodeHind,
'| tegi kasutaja ', SYSTEM_USER)
from deleted INNER JOIN inserted
on deleted.toodeID=inserted.toodeID; 

--kontroll
update toode set toodeHind=4.30
where toodeNimetus='Fanta';

select * from toode;
select * from logi;
